Board:
  # The type of Solitaire board: diamond (d) or triangle (t)
  type: "t"

  # The size of the board
  size: 5

  # The open cell (or cells) in the puzzle’s start state. NOTE: It should be possible to create an initial
  # state with one or more holes. There for add config for all holes location (row, column).
  holes_loc: [[2,1]]

Critic:
  # Critic using table lookup or neural network
  table_lookup: False

  # Dimension of critics neural network. E.g, (20,10,1) is three layers with 20, 10 and 1 neuron.
  critic_layer_specs: [15, 64, 1]

  # Learning rate critic
  # When the critic uses a neural network, it is often wise to have a much lower learning rate for the critic than for the actor.
  lr_critic: 0.00000001

  # The eligibility decay rate
  dr_critic: 0.9

  # Discount factor critic
  df_critic: 0.95


Actor:
  # Learning rates for the actor and critic – you may have separate values for each.
  lr_actor: 0.0001

  # The eligibility decay rate
  dr_actor: 0.9

  # Discount factor actor and critic
  df_actor: 0.8

  # Epsilon for epsilon-greedy strategy with decay rate if changing
  epsilon: 2

  # Decay rate epsilon
  dr_epsilon: 0.99

Training:
  # Epochs - The number of episodes it will run
  episodes: 600

  # Display visualizations on-off
  display: True

  # Delay between frames of the game viewer
  frame_delay: 500

  # Progression of Learning path
  pol_path: "graphs/task_2_nn.png"

  # Path where the animation should be saved
  animation_path: "graphs/task_2_nn.gif"

Player:
  # Who is playing
  name: "Kristoffer"


